"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const webdriverio_1 = require("webdriverio");
const APPIUM_HOST = '127.0.0.1';
const APPIUM_PORT = 31337;
const WDIO_PARAMS = {
    connectionRetryCount: 0,
    hostname: APPIUM_HOST,
    port: APPIUM_PORT,
    path: '/wd/hub/',
    logLevel: 'info',
};
const capabilities = {
    platformName: 'Android',
    'appium:platformVersion': '12.0',
    'appium:app': 'storage:filename=storage:filename=VodQA.apk',
    'sauce:options': {
        build: 'appium-build-DN2YE',
        name: 'device-farm',
    },
};
let driver;
describe('Plugin Test', () => {
    beforeEach(() => __awaiter(void 0, void 0, void 0, function* () {
        driver = yield (0, webdriverio_1.remote)(Object.assign(Object.assign({}, WDIO_PARAMS), { capabilities }));
    }));
    it('Vertical swipe test', () => __awaiter(void 0, void 0, void 0, function* () {
        console.log(yield driver.capabilities.deviceUDID);
        yield driver.$('~login').click();
    }));
    afterEach(() => __awaiter(void 0, void 0, void 0, function* () {
        if (driver) {
            yield driver.deleteSession();
            driver = null;
        }
    }));
});
